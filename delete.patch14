*** /tmp/,RCSt1021382	Tue Jun  4 22:31:27 1991
--- Makefile	Tue Jun  4 22:17:43 1991
***************
*** 5,11 ****
  #
  #     $Source: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v $
  #     $Author: probe $
! #     $Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $
  #
  
  # If you are compiling on a system that has an st_blocks field in
--- 5,11 ----
  #
  #     $Source: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v $
  #     $Author: probe $
! #     $Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $
  #
  
  # If you are compiling on a system that has an st_blocks field in
***************
*** 13,18 ****
--- 13,22 ----
  # blocks taken up by the file, add -DUSE_BLOCKS to the DEFINES
  # variable below.  If you don't know whether or not to define it, run
  # "make block-test".
+ # 
+ # If you are using a system where malloc(0) returns 0 even when it
+ # succeeds, then set MALLOC below to -DMALLOC_0_RETURNS_NULL.  If you
+ # don't know whether or not to define it, run "make malloc-test".
  
  DESTDIR=
  TARGETS= 	delete undelete expunge purge lsdel
***************
*** 24,30 ****
  DEPEND=		/usr/bin/X11/makedepend
  COMPILE_ET= 	compile_et
  LINT= 		lint
! DEFINES=	
  
  
  # These variables apply only if you want this program to recognize
--- 28,35 ----
  DEPEND=		/usr/bin/X11/makedepend
  COMPILE_ET= 	compile_et
  LINT= 		lint
! MALLOC=
! DEFINES=	$(MALLOC)
  
  
  # These variables apply only if you want this program to recognize
***************
*** 79,85 ****
  		man1/undelete.1
  
  ARCHIVE=	README Makefile PATCHLEVEL $(SRCS) $(INCS) $(MANS)\
! 		$(ETSRCS) block-test.sh
  ARCHIVEDIRS= 	man1
  
  DELETEOBJS= 	delete.o util.o delete_errs.o errors.o
--- 84,90 ----
  		man1/undelete.1
  
  ARCHIVE=	README Makefile PATCHLEVEL $(SRCS) $(INCS) $(MANS)\
! 		$(ETSRCS) block-test.sh malloc-test.c
  ARCHIVEDIRS= 	man1
  
  DELETEOBJS= 	delete.o util.o delete_errs.o errors.o
***************
*** 191,197 ****
  	$(DEPEND) -v $(CFLAGS) -s'# DO NOT DELETE' $(SRCS)
  
  block-test: block-test.sh
! 	CC=$(CC); TMPDIR=$(TMPDIR); export CC TMPDIR; . block-test.sh
  
  $(DELETEOBJS): delete_errs.h
  $(EXPUNGEOBJS): delete_errs.h
--- 196,207 ----
  	$(DEPEND) -v $(CFLAGS) -s'# DO NOT DELETE' $(SRCS)
  
  block-test: block-test.sh
! 	CC=$(CC); TMPDIR=$(TMPDIR); export CC TMPDIR; . ./block-test.sh
! 
! malloc-test: malloc-test.c
! 	@$(CC) -o malloc-test malloc-test.c
! 	@./malloc-test
! 	@rm malloc-test
  
  $(DELETEOBJS): delete_errs.h
  $(EXPUNGEOBJS): delete_errs.h
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:29 1991
--- PATCHLEVEL	Tue Jun  4 22:29:44 1991
***************
*** 1 ****
! 13
--- 1 ----
! 14
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:31 1991
--- delete.c	Tue Jun  4 22:07:01 1991
***************
*** 11,22 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_delete_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <sys/types.h>
  #include <stdio.h>
  #include <sys/dir.h>
  #ifdef SYSV
  #include <string.h>
  #define index strchr
--- 11,27 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_delete_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <sys/types.h>
  #include <stdio.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #ifdef SYSV
  #include <string.h>
  #define index strchr
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:33 1991
--- undelete.c	Tue Jun  4 22:07:34 1991
***************
*** 11,22 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_undelete_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/dir.h>
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
--- 11,27 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_undelete_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
***************
*** 267,273 ****
       int retval;
       
       filelist = (listrec *) Malloc((unsigned) (sizeof(listrec) * num));
!      if (! filelist) {
  	  set_error(errno);
  	  error("process_files");
  	  return error_code;
--- 272,283 ----
       int retval;
       
       filelist = (listrec *) Malloc((unsigned) (sizeof(listrec) * num));
! #ifdef MALLOC_0_RETURNS_NULL
!      if ((! filelist) && num)
! #else
!      if (! filelist)
! #endif
!      {
  	  set_error(errno);
  	  error("process_files");
  	  return error_code;
***************
*** 486,492 ****
       *number -= offset;
       files = (listrec *) realloc((char *) files,
  				 (unsigned) (sizeof(listrec) * *number));
!      if (! files) {
  	  set_error(errno);
  	  error("realloc");
  	  return errno;
--- 496,507 ----
       *number -= offset;
       files = (listrec *) realloc((char *) files,
  				 (unsigned) (sizeof(listrec) * *number));
! #ifdef MALLOC_0_RETURNS_NULL
!      if ((! files) && *number)
! #else
!      if (! files)
! #endif
!      {
  	  set_error(errno);
  	  error("realloc");
  	  return errno;
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:35 1991
--- directories.c	Tue Jun  4 22:08:21 1991
***************
*** 11,23 ****
   */
  
  #if !defined(lint) && !defined(SABER)
!      static char rcsid_directories_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/param.h>
  #include <sys/dir.h>
  #ifdef SYSV
  #include <string.h>
  #define index strchr
--- 11,28 ----
   */
  
  #if !defined(lint) && !defined(SABER)
!      static char rcsid_directories_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/param.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #ifdef SYSV
  #include <string.h>
  #define index strchr
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:38 1991
--- pattern.c	Tue Jun  4 22:06:23 1991
***************
*** 11,22 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_pattern_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/dir.h>
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
--- 11,27 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_pattern_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
***************
*** 57,63 ****
       
       *array1 = (char **) realloc((char *) *array1, (unsigned)
  				 (sizeof(char *) * (*num1 + *num2)));
!      if (! *array1) {
  	  set_error(errno);
  	  error("realloc");
  	  return error_code;
--- 62,73 ----
       
       *array1 = (char **) realloc((char *) *array1, (unsigned)
  				 (sizeof(char *) * (*num1 + *num2)));
! #ifdef MALLOC_0_RETURNS_NULL
!      if ((! *array1) && (*num1 + *num2))
! #else
!      if (! *array1)
! #endif
!      {
  	  set_error(errno);
  	  error("realloc");
  	  return error_code;
***************
*** 227,237 ****
--- 237,249 ----
       
       if (options & RECURS) {
  	  return_files = (char **) Malloc(0);
+ #ifndef MALLOC_0_RETURNS_NULL
  	  if (! return_files) {
  	       set_error(errno);
  	       error("Malloc");
  	       return error_code;
  	  }
+ #endif
  	  num_return_files = 0;
  
  	  for (i = 0; i < num_matched_files; i++) {
***************
*** 435,440 ****
--- 447,453 ----
  	  *base = '\0';
  
       *found = (char **) Malloc(0);
+ #ifndef MALLOC_0_RETURNS_NULL
       if (! *found) {
  	  set_error(errno);
  	  error("Malloc");
***************
*** 443,448 ****
--- 456,462 ----
  #endif
  	  return error_code;
       }
+ #endif
       *num_found = 0;
       
       dirp = Opendir(base);
***************
*** 743,753 ****
--- 757,769 ----
       /* start: */
       
       *found = (char **) Malloc(0);
+ #ifndef MALLOC_0_RETURNS_NULL
       if (! *found) {
  	  set_error(errno);
  	  error("Malloc");
  	  return error_code;
       }
+ #endif
       *num_found = 0;
       strcpy(base, name);
  
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:41 1991
--- util.c	Tue Jun  4 22:06:43 1991
***************
*** 11,17 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_util_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
--- 11,17 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_util_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
***************
*** 20,26 ****
--- 20,31 ----
  #ifdef SYSV /* SYSV doesn't define uid_t */
  typedef unsigned short uid_t;
  #endif
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #ifdef SYSV
  #include <string.h>
  #define index strchr
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:43 1991
--- expunge.c	Tue Jun  4 22:07:51 1991
***************
*** 11,23 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_expunge_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/time.h>
  #include <sys/dir.h>
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
--- 11,28 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_expunge_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/time.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:45 1991
--- lsdel.c	Tue Jun  4 22:08:42 1991
***************
*** 11,22 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_lsdel_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/dir.h>
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
--- 11,27 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_lsdel_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <stdio.h>
  #include <sys/types.h>
+ #ifdef POSIX
+ #include <dirent.h>
+ #define direct dirent
+ #else
  #include <sys/dir.h>
+ #endif
  #include <sys/param.h>
  #ifdef SYSV
  #include <string.h>
***************
*** 45,51 ****
  extern int errno;
  
  int space_total = 0;
! int dirsonly, recursive, yield, f_links, f_mounts;
  time_t timev;
  
  main(argc, argv)
--- 50,56 ----
  extern int errno;
  
  int space_total = 0;
! int dirsonly, recursive, yield, f_links, f_mounts, singlecolumn;
  time_t timev;
  
  main(argc, argv)
***************
*** 59,66 ****
       whoami = lastpart(argv[0]);
  
       dirsonly = recursive = timev = yield = f_links = f_mounts = 0;
!      while ((arg = getopt(argc, argv, "drt:ysm")) != -1) {
  	  switch (arg) {
  	  case 'd':
  	       dirsonly++;
  	       break;
--- 64,92 ----
       whoami = lastpart(argv[0]);
  
       dirsonly = recursive = timev = yield = f_links = f_mounts = 0;
!      singlecolumn = -1;
!      while ((arg = getopt(argc, argv, "1Cdrt:ysm")) != -1) {
  	  switch (arg) {
+ 	  case '1':
+ 	       if ((singlecolumn != -1) && (! singlecolumn)) {
+ 		    fprintf(stderr,
+ 			    "%s: -1 and -C options are mutually exclusive\n",
+ 			    whoami);
+ 		    usage();
+ 		    exit(1);
+ 	       }
+ 	       singlecolumn = 1;
+ 	       break;
+ 	  case 'C':
+ 	       if ((singlecolumn != -1) && singlecolumn) {
+ 		    fprintf(stderr,
+ 			    "%s: -1 and -C options are mutually exclusive\n",
+ 			    whoami);
+ 		    usage();
+ 		    exit(1);
+ 	       }
+ 	       singlecolumn = 0;
+ 	       break;
  	  case 'd':
  	       dirsonly++;
  	       break;
***************
*** 84,89 ****
--- 110,118 ----
  	       exit(1);
  	  }
       }
+      if (singlecolumn == -1)
+ 	  singlecolumn = ! isatty(1);
+ 
       if (optind == argc) {
  	  char *cwd;
  
***************
*** 113,118 ****
--- 142,150 ----
       fprintf(stderr, "     -y     report total space taken up by files\n");
       fprintf(stderr, "     -s     follow symbolic links to directories\n");
       fprintf(stderr, "     -m     follow mount points\n");
+      fprintf(stderr, "     -1     force single-column output\n");
+      fprintf(stderr, "     -C     force multi-column output (default when output is to a terminal)\n");
+      fprintf(stderr, "-1 and -C are mutually exclusive\n");
  }
  
  
***************
*** 255,260 ****
--- 287,297 ----
  
  
  
+ static int alphacmp(str1, str2)
+ char **str1, **str2;
+ {
+      return(strcmp(*str1, *str2));
+ }
  
  list_files()
  {
***************
*** 290,298 ****
  	  error("unique");
  	  return retval;
       }
!      
!      if (retval = column_array(strings, num, DEF_SCR_WIDTH, 0, 0, 2, 1, 0,
! 			       1, stdout)) {
  	  error("column_array");
  	  return retval;
       }
--- 327,337 ----
  	  error("unique");
  	  return retval;
       }
! 
!      qsort((char *) strings, num, sizeof(char *), alphacmp);
! 
!      if (retval = column_array(strings, num, DEF_SCR_WIDTH, 0, singlecolumn,
! 			       2, 1, 0, 1, stdout)) {
  	  error("column_array");
  	  return retval;
       }
***************
*** 342,348 ****
       *number -= offset;
       files = (char **) realloc((char *) files,
  			       (unsigned) (sizeof(char *) * *number));
!      if ((*number != 0) && (! files)) {
  	  set_error(errno);
  	  error("realloc");
  	  return errno;
--- 381,392 ----
       *number -= offset;
       files = (char **) realloc((char *) files,
  			       (unsigned) (sizeof(char *) * *number));
! #ifdef MALLOC_0_RETURNS_NULL
!      if ((! files) && *number)
! #else
!      if (! files)
! #endif
!      {
  	  set_error(errno);
  	  error("realloc");
  	  return errno;
*** /tmp/,RCSt1021382	Tue Jun  4 22:31:50 1991
--- stack.c	Tue Jun  4 22:06:00 1991
***************
*** 11,17 ****
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_stack_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <sys/types.h>
--- 11,17 ----
   */
  
  #if (!defined(lint) && !defined(SABER))
!      static char rcsid_stack_c[] = "$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $";
  #endif
  
  #include <sys/types.h>
***************
*** 63,69 ****
  	       stack = (caddr_t) (stack ? realloc((char *) stack,
  						  (unsigned) size) :
  				  Malloc((unsigned) size));
! 	       if (! stack) {
  		    size = count = 0;
  		    set_error(errno);
  		    error("Malloc");
--- 63,74 ----
  	       stack = (caddr_t) (stack ? realloc((char *) stack,
  						  (unsigned) size) :
  				  Malloc((unsigned) size));
! #ifdef MALLOC_0_RETURNS_NULL
! 	       if ((! stack) && size)
! #else
! 	       if (! stack)
! #endif
! 	       {
  		    size = count = 0;
  		    set_error(errno);
  		    error("Malloc");
***************
*** 119,125 ****
  	       if (newsize < size) {
  		    size = newsize;
  		    stack = (caddr_t) realloc((char *) stack, (unsigned) size);
! 		    if ((size != 0) && (! stack)) {
  			 set_error(errno);
  			 error("realloc");
  #ifdef STACK_DEBUG
--- 124,135 ----
  	       if (newsize < size) {
  		    size = newsize;
  		    stack = (caddr_t) realloc((char *) stack, (unsigned) size);
! #ifdef MALLOC_0_RETURNS_NULL
! 		    if ((! stack) && size)
! #else
! 		    if (! stack)
! #endif
! 	            {
  			 set_error(errno);
  			 error("realloc");
  #ifdef STACK_DEBUG
*** /tmp/,RCSt1021382	Tue Jun  4 22:32:08 1991
--- man1/lsdel.1	Tue Jun  4 18:57:48 1991
***************
*** 1,6 ****
  .\"	$Source: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v $
  .\"	$Author: probe $
! .\"	$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $
  .\"
  .\" Copyright 1989 by the Massachusetts Institute of Technology.  All
  .\" rights reserved.  The file /usr/include/mit-copyright.h specifies
--- 1,6 ----
  .\"	$Source: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v $
  .\"	$Author: probe $
! .\"	$Header: /afs/dev.mit.edu/source/repository/athena/bin/delete/delete.patch14,v 1.1 1993-10-12 06:02:26 probe Exp $
  .\"
  .\" Copyright 1989 by the Massachusetts Institute of Technology.  All
  .\" rights reserved.  The file /usr/include/mit-copyright.h specifies
***************
*** 25,30 ****
--- 25,34 ----
  .B \-m
  ] [
  .B \-y
+ ] [
+ .B \-1
+ ] [
+ .B \-C
  ] [ filename [ ... ]]
  .PP
  .SH DESCRIPTION
***************
*** 72,77 ****
--- 76,89 ----
  option causes
  .I lsdel
  to print the total amount of space taken up by all the files it lists.
+ .PP
+ The
+ .BR \-1
+ option forces output to be one file per line; this is the default when
+ output is not to a terminal.  The
+ .BR \-C
+ option does the opposite, forcing multi-column output, which is the
+ default when output is to a terminal.
  .SH "SEE ALSO"
  delete(1), undelete(1), purge(1), expunge(1), ls(1)
  .SH AUTHOR
*** /tmp/,RCSt1021382	Tue Jun  4 22:32:13 1991
--- block-test.sh	Tue Jun  4 20:51:52 1991
***************
*** 9,15 ****
  main()
  {
       struct stat statbuf;
!      char buf[1024];
       int testfile;
       char filename[20];
  
--- 9,15 ----
  main()
  {
       struct stat statbuf;
!      char buf[4096];
       int testfile;
       char filename[20];
  
***************
*** 37,48 ****
  	  exit(1);
       }
  
!      if (statbuf.st_blocks == 2) {
  	  printf("You SHOULD define USE_BLOCKS.\n");
       }
       else {
  	  printf("You SHOULD NOT define USE_BLOCKS.\n");
! 	  printf("However, you have an interesting machine that delete might be made to work\nbetter with.  Please contact the author (see the README file for an address)\nand tell him what kind of machine you have and what operating system it is\nrunning.");
       }
       exit(0);
  }
--- 37,48 ----
  	  exit(1);
       }
  
!      if (statbuf.st_blocks == sizeof(buf) / 512) {
  	  printf("You SHOULD define USE_BLOCKS.\n");
       }
       else {
  	  printf("You SHOULD NOT define USE_BLOCKS.\n");
! 	  printf("However, you have an interesting machine that delete might be made to work\nbetter with.  Please contact the author (see the README file for an address)\nand tell him what kind of machine you have and what operating system it is\nrunning.\n");
       }
       exit(0);
  }
*** /tmp/,RCSt1021382	Tue Jun  4 22:32:14 1991
--- malloc-test.c	Tue Jun  4 22:25:14 1991
***************
*** 0 ****
--- 1,6 ----
+ main()
+ {
+      printf("You %s define MALLOC_0_RETURNS_NULL.\n",
+ 	    malloc(0) ? "should NOT" : "SHOULD");
+      exit(0);
+ }
